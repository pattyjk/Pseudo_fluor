ylab("Percent resistant to AB")+
xlab("Pond Number")+
theme_bw()+
geom_jitter()+
facet_wrap(~variable, scales = "free_y")
which(df_m$value >100)
ggplot(df_m[-which(df_m$value >100),], aes(Pond_No,value, fill=Pond_No))+
geom_boxplot()+
ylab("Percent resistant to AB")+
xlab("Pond Number")+
theme_bw()+
geom_jitter()+
facet_wrap(~variable, scales = "free_y")
PF_cali_ani_output <- read.delim("C:/Users/patty/Downloads/PF_cali_ani_output")
View(PF_cali_ani_output)
library(ggplot2)
ggplot(PF_cali_ani_output, aes(Sp1, Sp2, fill=ANI))+
geom_tile()
which(PF_cali_ani_output$Sp1 == '629A2A')
which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A')
ggplot(PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A'),], aes(Sp1, Sp2, fill=ANI))+
geom_tile()
ggplot(PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A') | | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),], aes(Sp1, Sp2, fill=ANI))+
ggplot(PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A') | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),], aes(Sp1, Sp2, fill=ANI))+
ggplot(PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A' | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),], aes(Sp1, Sp2, fill=ANI))+
geom_tile()
PF_cali_ani_output <- read.delim("C:/Users/patty/Downloads/PF_cali_ani_output")
ggplot(PF_cali_ani_output, aes(Comparison, ANI))+
geom_boxplot()
ggplot(PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A' | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),], aes(Comparison, ANI))+
geom_boxplot()
PF_cali_ani_output <-PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp1 == '630A' | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),]
ggplot(PF_cali_ani_output, aes(Sp1, Sp2, fill=ANI))+
geom_tile()
ggplot(PF_cali_ani_output, aes(Comparison, ANI))+
geom_boxplot()
t.test(PF_cali_ani_output$ANI ~ PF_cali_ani_output$Comparison)
ggplot(PF_cali_ani_output, aes(Comparison, ANI))+
geom_boxplot()+
theme_bw()+
ylab("Average Nucleotide Identity")+
xlab("")
ggplot(PF_cali_ani_output, aes(Sp1, Sp2, fill=ANI))+
geom_tile()+
theme_bw()+
ylab("")+
xlab("")
ggplot(PF_cali_ani_output, aes(Comparison, ANI))+
geom_boxplot()+
theme_bw()+
ylab("Average Nucleotide Identity")+
xlab("")
ggplot(PF_cali_ani_output, aes(Sp1, Sp2, fill=ANI))+
geom_tile()+
theme_bw()+
ylab("")+
xlab("")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
View(ab)
library(ggplot2)
library(reshape2)
ab_m<-melt(ab)
View(ab_m)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
View(ab_m)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("red", "orange"))
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
which(ab_m$value>100)
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(Pond_No, value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ab <- read.delim("C:/Users/patty/OneDrive/Desktop/ab.txt")
library(ggplot2)
library(reshape2)
ab$Pond_No<-as.factor(ab$Pond_No)
ab$Sample_no<-as.factor(ab$Sample_no)
ab_m<-melt(ab)
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=variable))+
geom_boxplot()+
theme_bw()+
facet_wrap(~Pond_type)+
scale_fill_manual(values=c("orange", "blue"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=variable))+
geom_boxplot()+
theme_bw()+
facet_wrap(~Pond_type)+
scale_fill_manual(values=c("orange", "blue", "green", "pink", "grey"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
ggplot(ab_m, aes(reorder(Pond_No, Pond_type), value, fill=Pond_type))+
geom_boxplot()+
theme_bw()+
facet_wrap(~variable)+
scale_fill_manual(values=c("orange", "blue", "green", "pink", "grey"))+
xlab("Pond number")+
ylab("Percentage of community resistant to antibiotic")
amphib_viruses <- read.delim("C:/Users/patty/OneDrive/Desktop/amphib_viruses.txt")
View(amphib_viruses)
library(ggplot2)
ggplot(amphib_viruses, aes(SampleID, Host_species, fill=No_phages))+
facet_wrap(~Species)+
theme_bw()
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
theme_bw()
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
geom_bar(stat='identity')+
theme_bw()
amphib_viruses <- read.delim("C:/Users/patty/OneDrive/Desktop/amphib_viruses.txt")
library(ggplot2)
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
geom_bar(stat='identity')+
theme_bw()
library(dplyr)
vir_sum<-ddply(amphib_viruses, summarize, c("SampleID", "Host_species", "Host_species"), n=length(No_phages), sum=sum(No_phages), rel_abun=No_phages/sum)
library(dplyr)
library(plyr)
vir_sum<-ddply(amphib_viruses, summarize, c("SampleID", "Host_species", "Host_species"), n=length(No_phages), sum=sum(No_phages), rel_abun=No_phages/sum)
vir_sum<-ddply(amphib_viruses, c("SampleID", "Host_species", "Host_species"), n=length(No_phages), summy=sum(No_phages), rel_abun=No_phages/summy)
View(vir_sum)
vir_sum<-ddply(amphib_viruses, c("SampleID", "Host_species", "Host_species"), summarize, n=length(No_phages), summy=sum(No_phages), rel_abun=No_phages/summy)
vir_sum %>%
group_by(SampleID) %>%
summarise(n = n()) %>%
mutate(freq = n / sum(n))
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
geom_bar(stat='identity')+
theme_bw()
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
geom_bar(stat='identity', scales='free_y', scales='free_x')+
theme_bw()
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species)+
geom_bar(stat='identity', scales='free')+
theme_bw()
ggplot(amphib_viruses, aes(SampleID, No_phages, fill=Host_species))+
facet_wrap(~Species, scales='free')+
geom_bar(stat='identity')+
theme_bw()
gene_presence_absence <- read_delim("PFC_panaroo_results/gene_presence_absence.Rtab", delim = "\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
gene_presence_absence <- read_delim("PFC_panaroo_results/gene_presence_absence.Rtab", delim = "\t", escape_double = FALSE, trim_ws = TRUE)
gene_presence_absence <- read_delim("Pseudo_fluor/gene_presence_absence.txt", delim = "\t", escape_double = FALSE, trim_ws = TRUE)
View(gene_presence_absence)
# Identify rows with only one non-zero value
rows_with_single_non_zero <- apply(gene_presence_absence != 0, 1, sum) == 1
result <- gene_presence_absence[rows_with_single_non_zero, ]
View(result)
# Identify rows with only one non-zero value
which(rowsum(gene_presence_absence)=1)
# Identify rows with only one non-zero value
which(rowsum(gene_presence_absence)==1)
rowsum(gene_presence_absence)
# Identify rows with only one non-zero value
which(rowsums(gene_presence_absence)==1)
# Identify rows with only one non-zero value
which(rowSums(gene_presence_absence)==1)
# Identify rows with only one non-zero value
which(rowSums(gene_presence_absence[,-1])==1)
length(which(rowSums(gene_presence_absence[,-1])==1))
result <- gene_presence_absence[which(rowSums(gene_presence_absence[,-1])==1), ]
colSums(results)
colSums(result[,-1])
coness_genes<-gene_presence_absence %>%
select(matches("CP"))
#subset table to be coness only
library(dplyr)
coness_genes<-gene_presence_absence %>%
select(matches("CP"))
View(coness_genes)
str(coness_genes)
sixty_genes<-gene_presence_absence %>%
select(-matches("CP"))
str(sixty_genes)
blast.files<-list.files("C:/Users/patty/OneDrive/Documents/GitHub/Pseudo_fluor/blast/", pattern = "txt$", full.names = T)
#get distances
dst.tbl <- bDist(blast.files = blast.files, e.value=0.05, verbose=T)
library(tidyverse)
library(micropan)
blast.files<-list.files("C:/Users/patty/OneDrive/Documents/GitHub/Pseudo_fluor/blast/", pattern = "txt$", full.names = T)
#get distances
dst.tbl <- bDist(blast.files = blast.files, e.value=0.05, verbose=T)
#visualize distances (optional)
ggplot(dst.tbl) +
geom_histogram(aes(x = Distance), bins = 100)
#hierarchical cluster data
clst.blast <- bClust(dst.tbl, linkage = "complete", threshold = 0.75)
#construct pangenome matrix
panmat.blast <- panMatrix(clst.blast)
#visualize the number of clusters per genomes
tibble(Clusters = as.integer(table(factor(colSums(panmat.blast > 0),
levels = 1:nrow(panmat.blast)))),
Genomes = 1:nrow(panmat.blast)) %>%
ggplot(aes(x = Genomes, y = Clusters)) +
geom_col() + labs(title = "Number of clusters found in 1, 2,...,all genomes")
#calculate pangenome size
heaps.est <- heaps(panmat.blast, n.perm = 500)
print(heaps.est)
# Intercept      alpha
#811.142958   1.141321
print(chao(panmat.blast))
#9302
fitted <- binomixEstimate(panmat.blast, K.range = 3:8)
print(fitted$BIC.tbl)
ncomp <- 4
fitted$Mix.tbl %>%
filter(Components == ncomp) %>%
ggplot() +
geom_col(aes(x = "", y = Mixing.proportion, fill = Detection.prob)) +
coord_polar(theta = "y") +
labs(x = "", y = "", title = "Pan-genome gene family distribution",
fill = "Detection\nprobability") +
scale_fill_gradientn(colors = c("pink", "orange", "green", "cyan", "blue"))
#view clustered genomes (manhattan unweighted)
library(ggdendro)
d.man <- distManhattan(panmat.blast)
ggdendrogram(dendro_data(hclust(d.man, method = "average")),
rotate = TRUE, theme_dendro = FALSE) +
labs(x = "Genomes", y = "Unweighted Manhattan distance", title = "Pan-genome dendrogram")
pm <- panmat.blast                                                   # make a copy
rownames(pm) <- gnm.tbl$File[match(rownames(pm), gnm.tbl$genome_id)] # new rownames
#load genome table
gnm.tbl <- read.delim("PFC_genome_table.txt")
#load genome table
gnm.tbl <- read.delim("C:/Users/patty/OneDrive/Documents/GitHub/Pseudo_fluor/PFC_genome_table.txt")
pm <- panmat.blast                                                   # make a copy
rownames(pm) <- gnm.tbl$File[match(rownames(pm), gnm.tbl$genome_id)] # new rownames
weights <- geneWeights(pm, type = "shell")
distManhattan(pm, weights = weights) %>%
hclust(method = "average") %>%
dendro_data() %>%
ggdendrogram(rotate = TRUE, theme_dendro = FALSE) +
labs(x = "Genomes", y = "Weighted Manhattan distance", title = "Pan-genome dendrogram")
str(sixty_genes)
which(rowSums(sixty_genes[,-1])==10)
which(rowSums(sixty_genes[,-1]==10))
rowSums(sixty_genes[,-1]
)
str(sixty_genes)
#calculate number of shared genes
which(rowSums(sixty_genes[,-1]==9))
which(rowSums(sixty_genes[,-1])==9))
sixty_genes[,-1]
rowSums(sixty_genes[,-1])
which(rowSums(sixty_genes[,-1]) == 9)
#calculate number of shared genes
length(which(rowSums(sixty_genes[,-1]) == 9))
nrow(sixty_genes)
5207/7779
which(rowSums(sixty_genes[,-1]) > 0)
length(which(rowSums(sixty_genes[,-1]) > 0))
length(which(rowSums(sixty_genes[,-1]) == 9))
length(which(rowSums(coness_genes[,-1]) == 9))
View(PF_cali_ani_output)
setwd("Pseudo_fluor/")
PF_cali_ani_output <- read.delim("PFC_ANI.txt")
PF_cali_ani_output <- PF_cali_ani_output[-which(PF_cali_ani_output$Sp1 == '630A' | PF_cali_ani_output$Sp1 == '629A2A' | PF_cali_ani_output$Sp2 == '630A' | PF_cali_ani_output$Sp2 == '629A2A'),]
View(PF_cali_ani_output)
#boxplot
ggplot(PF_cali_ani_output, aes(Comparison, ANI, fill=Lake1))+
geom_boxplot()+
theme_bw()+
ylab("Average Nucleotide Identity")+
xlab("")
t.test(PF_cali_ani_output$ANI ~ PF_cali_ani_output$Comparison)
